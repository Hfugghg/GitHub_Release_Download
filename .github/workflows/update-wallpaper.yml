# .github/workflows/update-wallpaper.yml

name: Update Wallpaper Gallery

on:
  schedule:
    # 每小时运行一次
    - cron: '0 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-gallery:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Max Page Number (Meta Call)
        id: get_meta
        run: |
          LAST_PAGE=$(curl -s "https://wallhaven.cc/api/v1/search?q=anime+girls&categories=010&sorting=toplist&topRange=1M&purity=100" | jq '.meta.last_page')
          echo "热门列表总页数: $LAST_PAGE"
          echo "LAST_PAGE=${LAST_PAGE}" >> $GITHUB_OUTPUT

      - name: Fetch Random Page of Wallpapers (Data Call)
        id: get_data
        run: |
          MAX_PAGE=${{ steps.get_meta.outputs.LAST_PAGE }}
          
          if [[ -z "$MAX_PAGE" || "$MAX_PAGE" == "null" || "$MAX_PAGE" -lt 1 ]]; then
            echo "错误：无法获取有效的总页数。跳过本次更新。"
            echo "SKIP=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          RANDOM_PAGE_1=$(( RANDOM % MAX_PAGE + 1 ))
          RANDOM_PAGE_2=$(( RANDOM % MAX_PAGE + 1 ))
          
          if [ "$RANDOM_PAGE_1" -lt "$RANDOM_PAGE_2" ]; then
            FINAL_PAGE="$RANDOM_PAGE_1"
          else
            FINAL_PAGE="$RANDOM_PAGE_2"
          fi
          
          echo "最终选择的随机页码: $FINAL_PAGE"
          curl -s "https://wallhaven.cc/api/v1/search?q=anime+girls&categories=010&sorting=toplist&topRange=1M&purity=100&page=${FINAL_PAGE}" -o api_response.json
          echo "已获取第 ${FINAL_PAGE} 页的壁纸数据。"

      # [!] 此步骤已更新，以支持文件重命名
      - name: Process, Rename and Download Wallpapers
        if: steps.get_data.outputs.SKIP != 'true'
        run: |
          DATA_LENGTH=$(jq '.data | length' api_response.json)
          if [[ -z "$DATA_LENGTH" || "$DATA_LENGTH" -eq 0 ]]; then
            echo "错误：API 响应中没有找到有效的图片数据。跳过本次更新。"
            exit 0
          fi

          echo "清理旧画廊..."
          rm -rf assets/gallery
          mkdir -p assets/gallery

          echo "智能选择一张横屏图片作为主背景..."
          MAIN_BG_URL=$(jq -r '.data[] | select((.ratio | tonumber) > 1.2) | .path' api_response.json | head -n 1)
          if [ -z "$MAIN_BG_URL" ]; then
            echo "未找到理想的横屏壁纸，使用第一张作为主背景。"
            MAIN_BG_URL=$(jq -r '.data[0].path' api_response.json)
          fi
          curl -o assets/background.jpg "$MAIN_BG_URL"

          echo "开始下载所有图片到画廊并重命名..."
          
          # 初始化一个计数器和一个空的 JSON 数组字符串
          COUNT=1
          JSON_INDEX="[]"

          # 使用 jq -c 将每个图片对象作为单独一行输出，方便 shell 循环处理
          jq -c '.data[]' api_response.json | while read -r image_json; do
            # 从单行 JSON 中提取图片路径
            PATH_URL=$(echo "$image_json" | jq -r '.path')
          
            # 提取文件扩展名 (jpg, png, etc.)
            EXTENSION="${PATH_URL##*.}"
          
            # 使用 printf 格式化文件名，确保数字是两位数（如 01, 02）
            NEW_FILENAME=$(printf "wallpaper_%02d.%s" "$COUNT" "$EXTENSION")
          
            echo "正在下载并重命名为 ${NEW_FILENAME} ..."
            curl -s -o "assets/gallery/${NEW_FILENAME}" "$PATH_URL"
          
            # 将新的文件名追加到我们的 JSON 数组字符串中
            JSON_INDEX=$(echo "$JSON_INDEX" | jq --arg file "$NEW_FILENAME" '. + [$file]')
          
            # 计数器加一
            COUNT=$((COUNT + 1))
          done
          
          echo "创建包含新文件名的画廊索引文件..."
          # 循环结束后，将最终的 JSON 字符串写入文件
          echo "$JSON_INDEX" > assets/gallery/index.json

      - name: Commit and Push new gallery
        if: steps.get_data.outputs.SKIP != 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add assets/
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "feat(bot): Update wallpaper gallery with renamed files"
            git push
            echo "壁纸画廊已更新并推送至仓库。"
          else
            echo "壁纸没有变化，无需推送。"
          fi